[
    {
        "id": "4aa2b5065132a1d5",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "36c81b6aa90283ef",
        "type": "group",
        "z": "4aa2b5065132a1d5",
        "name": "Bath with Living",
        "style": {
            "label": true
        },
        "nodes": [
            "5c92f2e6bc7a3d2a",
            "7a731abbd911cbac",
            "7e765e661452eb40",
            "ded2fa137d62d24b",
            "5a90946ee6abdce7",
            "d8a7daf582ded8f9",
            "f0849151890b25fa",
            "afa86d8ee5941f81",
            "e9e1c5a435662e00",
            "0598b8492d3147da",
            "43f0121884945b00",
            "21cc6dd7ee35db24",
            "9270dde44f94fd3e",
            "60fed96ba3696b68",
            "ced4a79f88975731",
            "9c3d14cf08576341",
            "8141fdc9576c18b5",
            "808fa742d9484431",
            "2dc5d37486a7dd62",
            "cc7c654d9dafcecc",
            "079dcc5de63e63bf",
            "79b8e2d047ac3434",
            "d5f75cd1321873f4",
            "47b381ae38623fa6"
        ],
        "x": 34,
        "y": 339,
        "w": 852,
        "h": 502
    },
    {
        "id": "6babdb777370422d",
        "type": "group",
        "z": "4aa2b5065132a1d5",
        "name": "Kitchen",
        "style": {
            "label": true
        },
        "nodes": [
            "b5b0393e8aa3344d",
            "7fe57bd97d257440",
            "75683e04a0e1a9ac",
            "64c9cdf51578deb6",
            "d0b886895e89963f",
            "ece63fa085132321",
            "3475385c5b4e8c34",
            "342e668123c22ee4",
            "ca8a1f3d43772f95",
            "5d4e1b03284c344d",
            "711cc0778fd4485a",
            "b245fc1071a6f45e"
        ],
        "x": 74,
        "y": 859,
        "w": 792,
        "h": 282
    },
    {
        "id": "5cc4c9928f816d47",
        "type": "group",
        "z": "4aa2b5065132a1d5",
        "name": "garage",
        "style": {
            "label": true
        },
        "nodes": [
            "dd3447b503ede336",
            "d6aa871f67b16863",
            "3624f8991b1f3300",
            "00d2fab6f01a2f5e",
            "762a8dd9eeac0edf",
            "8b2ffbe8478573fd",
            "627e53f5e772682a",
            "14e37cc82e01eb26",
            "a6c99aa99e9739cc",
            "a1fcce5feb6a0382",
            "4dd71a2624cb4fb8",
            "2de9c6b7ae993660",
            "949fd6a2496df6f8",
            "4fd330f1e31e47f6"
        ],
        "x": 74,
        "y": 1179,
        "w": 852,
        "h": 342
    },
    {
        "id": "4eb601cfa6a75c02",
        "type": "io7-hub",
        "name": "app",
        "host": "mqtt",
        "useTLS": true,
        "knownPort": true,
        "port": "1883",
        "tls": "",
        "clientid": ""
    },
    {
        "id": "401957fc50fad37a",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "a5d9dcfaf3891322",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "03cab814b6c243a1",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c2314ff69c166e4b",
        "type": "ui_group",
        "name": "HOME",
        "tab": "a5d9dcfaf3891322",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ddef73bb3b3b8dec",
        "type": "inject",
        "z": "4aa2b5065132a1d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "51aba6fe3e0695d9"
            ]
        ]
    },
    {
        "id": "51aba6fe3e0695d9",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "name": "openweather setup",
        "func": "let lat = \"37.328128\";\nlet lon = \"126.689262\";\nlet key = '8d8d9d27819746b0580fa7caf1aa0020'\n\n\nmsg.url = 'http://api.openweathermap.org/data/2.5/weather?appid=' + key;\nmsg.url += '&lat=' + lat + '&lon=' + lon;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "239f02315dfee51d"
            ]
        ]
    },
    {
        "id": "239f02315dfee51d",
        "type": "http request",
        "z": "4aa2b5065132a1d5",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "5aa7e9490951d5ff"
            ]
        ]
    },
    {
        "id": "5aa7e9490951d5ff",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "name": "temp",
        "func": "msg.payload = JSON.parse(msg.payload);\nvar temp1 = parseFloat(msg.payload.main.temp) - 273.15;\nmsg.payload.main.temp = temp1.toFixed(2);\nmsg.payload = {\n    \"d\": {\n        \"temp\": msg.payload.main.temp\n    }\n}\nglobal.set('outtemp', temp1.toFixed(2));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 160,
        "wires": [
            [
                "da34b112bd307464"
            ]
        ]
    },
    {
        "id": "da34b112bd307464",
        "type": "debug",
        "z": "4aa2b5065132a1d5",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 160,
        "wires": []
    },
    {
        "id": "5c92f2e6bc7a3d2a",
        "type": "io7 in",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "bath1",
        "deviceId": "bath1",
        "authentication": "4eb601cfa6a75c02",
        "evt": "status",
        "fmt": "json",
        "qos": "0",
        "allDevices": false,
        "allEvents": false,
        "allFormats": false,
        "x": 110,
        "y": 560,
        "wires": [
            [
                "79b8e2d047ac3434",
                "47b381ae38623fa6",
                "ded2fa137d62d24b"
            ]
        ]
    },
    {
        "id": "7a731abbd911cbac",
        "type": "io7 in",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "bath2",
        "deviceId": "bath2",
        "authentication": "4eb601cfa6a75c02",
        "evt": "status",
        "fmt": "json",
        "qos": "0",
        "allDevices": false,
        "allEvents": false,
        "allFormats": false,
        "x": 150,
        "y": 400,
        "wires": [
            [
                "9270dde44f94fd3e"
            ]
        ]
    },
    {
        "id": "7e765e661452eb40",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "authentication": "4eb601cfa6a75c02",
        "name": "bath1",
        "deviceId": "bath1",
        "cmd": "",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 790,
        "y": 560,
        "wires": []
    },
    {
        "id": "ded2fa137d62d24b",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "on / off",
        "func": "let evt1 = { d: {} };\n\nif (msg.payload.d.humidity > 80) {\n    evt1.d.valve = 'on';\n} else if (msg.payload.d.humidity <= 80) {\n    evt1.d.valve = 'off';\n}\nreturn { payload: evt1 };",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 620,
        "wires": [
            [
                "d5f75cd1321873f4",
                "7e765e661452eb40"
            ]
        ]
    },
    {
        "id": "5a90946ee6abdce7",
        "type": "ui_gauge",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "humidity",
        "group": "c2314ff69c166e4b",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}C",
        "min": "10",
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 560,
        "y": 660,
        "wires": []
    },
    {
        "id": "d8a7daf582ded8f9",
        "type": "ui_switch",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "",
        "label": "valve",
        "tooltip": "",
        "group": "c2314ff69c166e4b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 450,
        "y": 560,
        "wires": [
            [
                "f0849151890b25fa"
            ]
        ]
    },
    {
        "id": "f0849151890b25fa",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "command",
        "func": "msg.payload = {\n    \"d\": {\n        \"valve\": msg.payload\n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 560,
        "wires": [
            [
                "7e765e661452eb40"
            ]
        ]
    },
    {
        "id": "afa86d8ee5941f81",
        "type": "ui_switch",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "c2314ff69c166e4b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "open",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "close",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 450,
        "y": 380,
        "wires": [
            [
                "0598b8492d3147da"
            ]
        ]
    },
    {
        "id": "e9e1c5a435662e00",
        "type": "ui_switch",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "c2314ff69c166e4b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "open",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "close",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "43f0121884945b00"
            ]
        ]
    },
    {
        "id": "0598b8492d3147da",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "function 3",
        "func": "msg.payload = {\n    \"d\": {\n        \"door\": msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 380,
        "wires": [
            [
                "21cc6dd7ee35db24"
            ]
        ]
    },
    {
        "id": "43f0121884945b00",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "function 4",
        "func": "msg.payload = {\n    \"d\": {\n        \"window\": msg.payload\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 420,
        "wires": [
            [
                "21cc6dd7ee35db24"
            ]
        ]
    },
    {
        "id": "21cc6dd7ee35db24",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "authentication": "4eb601cfa6a75c02",
        "name": "bath2",
        "deviceId": "bath2",
        "cmd": "power",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 770,
        "y": 400,
        "wires": []
    },
    {
        "id": "9270dde44f94fd3e",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "function 2",
        "func": "\nlet door = {\n    payload: msg.payload.d.door\n}\nlet window = {\n    payload: msg.payload.d.window\n}\nreturn [door,window];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "afa86d8ee5941f81"
            ],
            [
                "e9e1c5a435662e00"
            ]
        ]
    },
    {
        "id": "60fed96ba3696b68",
        "type": "io7 in",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "living",
        "deviceId": "living",
        "authentication": "4eb601cfa6a75c02",
        "evt": "status",
        "fmt": "json",
        "qos": "0",
        "allDevices": false,
        "allEvents": true,
        "allFormats": false,
        "x": 130,
        "y": 740,
        "wires": [
            [
                "9c3d14cf08576341",
                "808fa742d9484431",
                "711cc0778fd4485a",
                "ece63fa085132321",
                "cc7c654d9dafcecc"
            ]
        ]
    },
    {
        "id": "ced4a79f88975731",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "authentication": "4eb601cfa6a75c02",
        "name": "living",
        "deviceId": "living",
        "cmd": "power",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 810,
        "y": 740,
        "wires": []
    },
    {
        "id": "9c3d14cf08576341",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "update ui",
        "func": "var outtemp = global.get('outtemp')\nlet evt1 = { d: {} }\n//집 도착 시 에어컨 조절\nvar distance2 = flow.get(\"distance2\")\nflow.set('livingvalve', msg.payload.d.valve);\nflow.set('livingtemp', parseFloat(msg.payload.d.temperature));\n\nvar livingvalve = flow.get(\"livingvalve\")\nvar temp = flow.get(\"livingtemp\")\n\nif (temp > 27 && distance2 <20){\n     evt1.d.valve = 'on'\n} \nelse if (temp < 27 || distance2 > 20) {\n     evt1.d.valve = 'off'\n}\nreturn {payload: evt1};\n\n/*if (msg.payload.d.temperature > 24 ){\n     msg.payload.d.valve = 'on'\n} else if (msg.payload.d.temperature < 24) {\n    msg.payload.d.valve = 'off'\n }*/\n\n/*let valve = { payload: msg.payload.d.valve }\nmsg.payload = msg.payload.d.valve;\n\nreturn msg;\n\n*/\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 740,
        "wires": [
            [
                "ced4a79f88975731"
            ]
        ]
    },
    {
        "id": "8141fdc9576c18b5",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "command",
        "func": "msg.payload = {\n    \"d\": {\n        \"valve\": msg.payload\n    }\n}\n/*if (msg.payload === \"on\") {\n    d:{\"on\"}\n\n\n}\nelse if (msg.payload === \"off\"){\n    d:{\"off\"}\n\n}*/\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 800,
        "wires": [
            [
                "ced4a79f88975731"
            ]
        ]
    },
    {
        "id": "808fa742d9484431",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "function 5",
        "func": "// @ts-nocheck\nlet outtemp = global.get('outtemp');\nlet livingtemp = flow.get('livingtemp');\n\nvar fire_control = flow.get(\"fire_control\")\n\n\nlet evt1 = { d : {}};\n\nevt1.d.fire_control = fire_control;\n\nevt1.d.temp = msg.payload.d.temperature;\n\nlet livingtemp1 = livingtemp;\nif (isNaN(evt1.d.temp)){\n    evt1.d.temp = livingtemp1\n}\nelse{\n    livingtemp1 = livingtemp\n}\nif (fire_control == \"off\") {\n    if (27 < livingtemp) {\n        evt1.d.door = 'open';\n        evt1.d.window = 'close';\n    } else if(27>livingtemp) {\n        evt1.d.door = 'close';\n        evt1.d.window = 'open';\n    }\n    \n} else if (fire_control == \"on\") {\n    evt1.d.door = 'close';\n    evt1.d.window = 'close';\n}\n\n\nreturn {payload : evt1};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "2dc5d37486a7dd62",
                "21cc6dd7ee35db24"
            ]
        ]
    },
    {
        "id": "2dc5d37486a7dd62",
        "type": "debug",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 500,
        "wires": []
    },
    {
        "id": "b5b0393e8aa3344d",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "authentication": "4eb601cfa6a75c02",
        "name": "kitchen_neopixel",
        "deviceId": "kitchen_neopixel",
        "cmd": "target",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 750,
        "y": 900,
        "wires": []
    },
    {
        "id": "7fe57bd97d257440",
        "type": "io7 in",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "kitchen_fire_sensor",
        "deviceId": "kitchen_fire_sensor",
        "authentication": "4eb601cfa6a75c02",
        "evt": "status",
        "fmt": "json",
        "qos": "0",
        "allDevices": false,
        "allEvents": false,
        "allFormats": false,
        "x": 190,
        "y": 900,
        "wires": [
            [
                "75683e04a0e1a9ac"
            ]
        ]
    },
    {
        "id": "75683e04a0e1a9ac",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "payload",
        "func": "flow.set(\"flame\", msg.payload.d.flame);\n//msg.payload = msg.payload.d.flame\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 900,
        "wires": [
            [
                "64c9cdf51578deb6"
            ]
        ]
    },
    {
        "id": "64c9cdf51578deb6",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "color",
        "func": "let color = { \"r\": 0, \"g\": 0, \"b\": 0 }\n\nvar flame = flow.get(\"flame\")\nvar fire = flow.get(\"fire\")\n//msg.payload === 1\nif (fire === 'on' || flame === 'on') {\n    color = { \"r\": 60, \"g\": 0, \"b\": 0 }\n    flow.set(\"fire_control\", msg.payload.d.flame);\n\n} else if (fire === 'off' && flame === 'off') {\n    color = { \"r\": 20, \"g\": 20, \"b\": 20 }\n    flow.set(\"fire_control\", msg.payload.d.flame);\n}\n\nmsg.payload = { \"d\": { \"color\": color } }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 900,
        "wires": [
            [
                "b5b0393e8aa3344d",
                "bd3383ef4861296c"
            ]
        ]
    },
    {
        "id": "d0b886895e89963f",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "authentication": "4eb601cfa6a75c02",
        "name": "kitchen_fan",
        "deviceId": "kitchen_fan",
        "cmd": "",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 690,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3475385c5b4e8c34",
        "type": "inject",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "on",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"d\" : {\"fan\" : \"on\"}}",
        "payloadType": "json",
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "d0b886895e89963f"
            ]
        ]
    },
    {
        "id": "342e668123c22ee4",
        "type": "inject",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"d\" : {\"fan\" : \"off\"}}",
        "payloadType": "json",
        "x": 510,
        "y": 1100,
        "wires": [
            [
                "d0b886895e89963f"
            ]
        ]
    },
    {
        "id": "ca8a1f3d43772f95",
        "type": "inject",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "humidity",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"d\" :{\"humidity\" : 80}}",
        "payloadType": "json",
        "x": 260,
        "y": 1060,
        "wires": [
            [
                "ece63fa085132321"
            ]
        ]
    },
    {
        "id": "5d4e1b03284c344d",
        "type": "debug",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "on/off",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1000,
        "wires": []
    },
    {
        "id": "711cc0778fd4485a",
        "type": "debug",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "humidity",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 980,
        "wires": []
    },
    {
        "id": "dd3447b503ede336",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "global",
        "func": "flow.set(\"distance1\", msg.payload.d.distance1);\nflow.set(\"distance2\", msg.payload.d.distance2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "d6aa871f67b16863",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "door",
        "func": "var distance1 = flow.get(\"distance1\")\nvar distance2 = flow.get(\"distance2\")\n\nlet evt3 = { d: {} };\n\n\nif (distance1 >= 20 && distance2 >= 20) {\n    evt3.d.motc = 'off';\n} else if (distance1 >= 20 || distance2 <= 20){\n    evt3.d.motc = 'off';\n}\nelse if (distance1 >= 20 && distance2 <= 5){\n    evt3.d.motc = 'on';\n}\nelse {\n    evt3.d.motc = 'on';\n}\n\n\nreturn { payload: evt3 };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1280,
        "wires": [
            [
                "2de9c6b7ae993660"
            ]
        ]
    },
    {
        "id": "3624f8991b1f3300",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "function 8",
        "func": "msg.payload = msg.payload.d.valve;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "949fd6a2496df6f8"
            ]
        ]
    },
    {
        "id": "00d2fab6f01a2f5e",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "function 9",
        "func": "msg.payload = {\"d\" :{\"value\" : msg.payload}}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1360,
        "wires": [
            [
                "4dd71a2624cb4fb8"
            ]
        ]
    },
    {
        "id": "762a8dd9eeac0edf",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "function 10",
        "func": "let evt1 = { d : {} };\nvar flame = flow.get(\"flame\")\nvar fire = flow.get(\"fire\")\n\nif (fire === 'on' || flame === '0') {\n    evt1.d.color = { r: 255, g: 0, b: 0 };\n} \n\nelse if (fire === 'off' || flame === '1') {\n    evt1.d.color = { r: 255, g: 255, b: 255 };\n}\nreturn { payload : evt1 };\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1420,
        "wires": [
            [
                "4dd71a2624cb4fb8"
            ]
        ]
    },
    {
        "id": "8b2ffbe8478573fd",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "fire_control",
        "func": "let color = { \"r\": 0, \"g\": 0, \"b\": 0 }\n\nvar flame = flow.get(\"flame\")\nvar fire = flow.get(\"fire\")\n//msg.payload === 1\nif (fire === 'on' || flame === 'on') {\n    color = { \"r\": 60, \"g\": 0, \"b\": 0 }\n    flow.set(\"fire_control\", msg.payload.d.fire);\n\n} else if (fire === 'off' && flame === 'off') {\n    color = { \"r\": 20, \"g\": 20, \"b\": 20 }\n    flow.set(\"fire_control\", msg.payload.d.fire);\n}\n\nmsg.payload = { \"d\": { \"color\": color } }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1480,
        "wires": [
            [
                "a1fcce5feb6a0382",
                "6b43fca7ffdad6cf"
            ]
        ]
    },
    {
        "id": "627e53f5e772682a",
        "type": "io7 in",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "HCSR04",
        "deviceId": "HCSR04",
        "authentication": "4eb601cfa6a75c02",
        "evt": "+",
        "fmt": "json",
        "qos": "0",
        "allDevices": false,
        "allEvents": true,
        "allFormats": false,
        "x": 160,
        "y": 1280,
        "wires": [
            [
                "dd3447b503ede336",
                "d6aa871f67b16863"
            ]
        ]
    },
    {
        "id": "14e37cc82e01eb26",
        "type": "io7 in",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "Springcooler",
        "deviceId": "spring",
        "authentication": "4eb601cfa6a75c02",
        "evt": "+",
        "fmt": "json",
        "qos": "0",
        "allDevices": false,
        "allEvents": true,
        "allFormats": false,
        "x": 170,
        "y": 1360,
        "wires": [
            [
                "3624f8991b1f3300"
            ]
        ]
    },
    {
        "id": "a6c99aa99e9739cc",
        "type": "io7 in",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "Fire",
        "deviceId": "garage_fire_sensor",
        "authentication": "4eb601cfa6a75c02",
        "evt": "status",
        "fmt": "json",
        "qos": "0",
        "allDevices": false,
        "allEvents": false,
        "allFormats": false,
        "x": 150,
        "y": 1480,
        "wires": [
            [
                "762a8dd9eeac0edf",
                "4fd330f1e31e47f6"
            ]
        ]
    },
    {
        "id": "a1fcce5feb6a0382",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "authentication": "4eb601cfa6a75c02",
        "name": "Fire",
        "deviceId": "garage_fire_sensor",
        "cmd": "",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 810,
        "y": 1480,
        "wires": []
    },
    {
        "id": "4dd71a2624cb4fb8",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "authentication": "4eb601cfa6a75c02",
        "name": "Springcooler",
        "deviceId": "spring",
        "cmd": "",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 830,
        "y": 1420,
        "wires": []
    },
    {
        "id": "2de9c6b7ae993660",
        "type": "io7 out",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "authentication": "4eb601cfa6a75c02",
        "name": "HCSR04",
        "deviceId": "HCSR04",
        "cmd": "",
        "fmt": "json",
        "qos": "0",
        "retain": "false",
        "x": 460,
        "y": 1280,
        "wires": []
    },
    {
        "id": "949fd6a2496df6f8",
        "type": "ui_switch",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "c2314ff69c166e4b",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 1360,
        "wires": [
            [
                "00d2fab6f01a2f5e"
            ]
        ]
    },
    {
        "id": "4fd330f1e31e47f6",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "5cc4c9928f816d47",
        "name": "function 15",
        "func": "flow.set(\"fire\", msg.payload.d.fire);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1480,
        "wires": [
            [
                "8b2ffbe8478573fd"
            ]
        ]
    },
    {
        "id": "6b43fca7ffdad6cf",
        "type": "debug",
        "z": "4aa2b5065132a1d5",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1200,
        "wires": []
    },
    {
        "id": "bd3383ef4861296c",
        "type": "debug",
        "z": "4aa2b5065132a1d5",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ece63fa085132321",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "on / off",
        "func": "let evt1 = {\"d\":{}};\n// let humidity = {\n//     payload: msg.payload.d.humidity\n// }\nvar fire_control = flow.get(\"fire_control\")\n\nif (fire_control == \"off\") {\n    if (70 < msg.payload.d.humidity) {\n        evt1.d.fan = 'on';\n    }\n    else if (70 > msg.payload.d.humidity){\n        evt1.d.fan = 'off';\n    }\n} else if (fire_control == \"on\") {\n    evt1.d.fan = 'off';\n}\n\n\nreturn { payload: evt1 };",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1060,
        "wires": [
            [
                "5d4e1b03284c344d",
                "d0b886895e89963f"
            ]
        ]
    },
    {
        "id": "b245fc1071a6f45e",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "6babdb777370422d",
        "name": "command",
        "func": "msg.payload = {\n    \"d\": {\n        \"valve\": msg.payload\n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "cc7c654d9dafcecc",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "global",
        "func": "flow.set('livingtemp', parseFloat(msg.payload.d.temperature));\nflow.set('livingvalve', msg.payload.d.valve);\nmsg.payload = msg.payload.d.valve;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 800,
        "wires": [
            [
                "079dcc5de63e63bf"
            ]
        ]
    },
    {
        "id": "079dcc5de63e63bf",
        "type": "ui_switch",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "",
        "label": "switchcc",
        "tooltip": "",
        "group": "c2314ff69c166e4b",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 480,
        "y": 800,
        "wires": [
            [
                "8141fdc9576c18b5"
            ]
        ]
    },
    {
        "id": "79b8e2d047ac3434",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "humidity information",
        "func": "let humidity = {\n    payload: msg.payload.d.humidity\n}\nreturn humidity;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 660,
        "wires": [
            [
                "5a90946ee6abdce7"
            ]
        ]
    },
    {
        "id": "d5f75cd1321873f4",
        "type": "debug",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "47b381ae38623fa6",
        "type": "function",
        "z": "4aa2b5065132a1d5",
        "g": "36c81b6aa90283ef",
        "name": "update ui",
        "func": "msg.payload = msg.payload.d.valve;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 560,
        "wires": [
            [
                "d8a7daf582ded8f9"
            ]
        ]
    }
]